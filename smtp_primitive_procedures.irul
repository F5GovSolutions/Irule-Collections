ltm rule /Common/smtp_primitive_procedures {
# iRule containing generic procedures used for SMTP Traffic

proc secev {level blocked violations message} {
    set event ""

    if { [lsearch -exact {emerg alert crit err warning notice info debug} $level] < 0 } {
        set level "info"
    }

    switch -- $violations {
        "Allowed receiving domain" { append event "01310044:6: " }
        "Directory harvesting attack" { append event "01310053:6: " }
        "SMTP methods" { append event "01310045:6: " }
    }

    if { $blocked } {
        append event {[SECEV] Request blocked, violations: } 
    } else { 
        if { $violations == "Transaction trace" } {
            append event {[SECEV]}
        } else {
            append event {[SECEV] Request violations:}
        }
    }

    append event " $violations, Virus name: (null). Security profile: protocol_security_irule, "

    if { [IP::client_addr] contains "%" } { 
        append event "source ip: [getfield [IP::client_addr] "%" 1], "
        append event "source port: [TCP::remote_port], "
        append event "route_domain: [getfield [IP::client_addr] "%" 2], "
    } else {
        append event "source ip: [IP::client_addr], "
        append event "source port: [TCP::remote_port], "
        append event "route_domain: [ROUTE::domain], "
    }

    append event "geographic location: <N/A>, "

    if { [IP::local_addr] contains "%" } { 
        append event "destination ip: [getfield [IP::local_addr] "%" 1], "
        append event "destination port: [TCP::local_port], "
    } else {
        append event "destination ip: [IP::local_addr], "
        append event "destination port: [TCP::local_port], "
    }

    append event "message: $message"

    log -noname local3.$level "$event"    
}

proc respond { code context } {
    switch -- $code {
        451 { set message "451 Requested action aborted: local error in processing" }
        501 { set message "501 Syntax error in parameters or arguments" }
        502 { set message "502 Requested command not allowed" }
        503 { set message "503 Bad sequence of commands" }
        530 { set message "530 Must issue a STARTTLS command first" }
        550 { set message "550 Requested action not taken: $context" }
    }
    
    switch -- [table lookup stls_activation] {
        "listening" {
            TCP::respond "[string trim $message]\r\n"
            TCP::payload replace 0 [TCP::payload length] ""
        }
        "ready" {
            SSL::respond "[string trim $message]\r\n"
            SSL::payload replace 0 [SSL::payload length] ""
        }
    }
    
    call smtp_primitive_procedures::transaction response $code
}

proc transaction {context value} {
    # If necessary, create the transaction tables
    if {[table lookup transaction] == ""} {
        table set transaction "|"
    }
    
    if {$static::transaction_trace && [table lookup transaction_trace] == ""} {
        table set transaction_trace "|"
    }
    
    switch -- $context {
        command {
            set response [table lookup -subtable transaction response]
            if { $response ne "" } {
                 table append transaction " $value ($response) |"
                 if {$static::transaction_trace} {
                    table append transaction_trace " $value ($response) |"
                 }
                 table delete -subtable transaction -all
            } else {
                table append -subtable transaction $context $value
            }
        }
        response {
            set command [table lookup -subtable transaction command]
            if { $command ne "" } {
                 table append transaction " $command ($value) |"
                 if {$static::transaction_trace} {
                    table append transaction_trace " $command ($value) |"
                 }
                 table delete -subtable transaction -all
            } else {
                table append -subtable transaction $context $value
            }
        }
    }
}
definition-checksum 080b324d4b1abd907e901dbf72f59894
}